rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'dev@sandvaer.dk';
    }

    // Helper function to check if user is data contributor
    function isDataContributor() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDataContributor == true;
    }

    match /priceEntries/{entry} {
      // Anyone authenticated can read
      allow read: if request.auth != null;

      // Only data contributors or admin can create entries with their own userId
      allow create: if request.auth != null
        && request.resource.data.userId == request.auth.uid
        && (isDataContributor() || isAdmin());

      // Users can update/delete their own entries OR admin can update/delete any entry
      allow update, delete: if request.auth != null
        && (resource.data.userId == request.auth.uid || isAdmin());
    }

    match /users/{userId} {
      // Users can read their own document, admin can read all
      allow read: if request.auth != null &&
        (request.auth.uid == userId || isAdmin());

      // Users can create their own document (on first login), admin can create any
      allow create: if request.auth != null &&
        (request.auth.uid == userId || isAdmin());

      // Users can update lastLogin and isPending on their own document, admin can update any field
      allow update: if request.auth != null &&
        ((request.auth.uid == userId &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lastLogin', 'isPending'])) ||
        isAdmin());

      // Only admin can delete user documents
      allow delete: if isAdmin();
    }

    match /translations/{translation} {
      // Anyone authenticated can read translations
      allow read: if request.auth != null;

      // Only admin can create, update, or delete translations
      allow create, update, delete: if isAdmin();
    }

    match /appConfig/{document} {
      // Anyone authenticated can read app config (including exchange rate)
      allow read: if request.auth != null;

      // Anyone authenticated can write (for updating exchange rate)
      // The service will handle checking if update is needed
      allow write: if request.auth != null;
    }

    match /userRequests/{requestDoc} {
      // Anyone can create a user request (for signup)
      allow create: if true;

      // Users can read their own pending requests
      allow read: if request.auth == null ||
                     resource.data.email == request.auth.token.email ||
                     isAdmin();

      // Only admin can update (approve/reject) or delete requests
      allow update, delete: if isAdmin();
    }
  }
}
